// Give a define.
#define FOO 10 
$a = FOO;
// A conditional
if ($a > 20) {
    $b = $a * 20;
    // Inner conditional
    if ($b > 20) {
        $b = $b - 5;
    }
    $quux = "thing!";
} else if ($a > 15) {
    $b = 100;
} else {
    $b = 200;
}
=====================
#define FOO 1024
// Any single line.
#define BAR_STER 2048
// That's ok
$a = 10; // and like this.
$foo = "thin g\" er";
$bar = "\/\/comment in string";
if ($a > 20) { // tricky // thinger

    $b = $a * 20; /* one of
      these */ 
    $quux = "tha thang";

} else if /*inline */($a > FOO) {
/*
    multi
        line
            banger */


    $b = BAR_STER;
} else {

    $b = 200;
}
=====================
$doug = "chu ng"; $dung = "fungi";
======================
a = 10
if a > 20:
    b = a * 20
elif a > 15:
    b = 100
else:
    b = 200
=====================
c = sha256(500,400,300)
===================
x = tx.datan
y = tx.data[0]
z = tx.sender
mktx(z,10^18,0,0)
====================
i = 0
a = 1
while i < 997:
    a = (a * 3) % 997
    i = i + 1
contract.storage[-1] = a
===============
if 1 == 0:
    a = 100
elif 3 == 3:
    b = 255
    if 1 == 0:
        a = 100
    else:
        b = 256
elif 2 == 4:
    a = 100

===============
def foo(bar):
    bar = bar - 10
    return bar

b = 1
a = foo(b)
x = array()
x[0] = 4
x[1] = 6
x[2] = 8

if tx.value <= 25 * 10^18:
    stop
elif contract.storage[tx.data[0]] or tx.data[0] < 1000:
    stop
contract.storage[tx.data[0]] = tx.data[1]

if 1 == 0:
    contract.storage[100] = 100
elif 3 == 3:
    contract.storage[255] = 255
    if 1 == 0:
        contract.storage[100] = 100
    else:
        contract.storage[256] = 256
elif 2 == 4:
    contract.storage[100] = 100

==============
if 1 < 0:
    b = 8
    stop
elif 2 > 3:
    a = 10

while b < 10:
    b = b + 1
    if b == 10:
        b = b * 100
    foo(b)

def foo(b):
    bar = b * 10
    return bar
==============
if 1 == 0:
    contract.storage[100] = 100
elif 3 == 3:
    contract.storage[255] = 255
    if 1 == 0:
        contract.storage[100] = 100
    else:
        contract.storage[256] = 256
elif 2 == 4:
    contract.storage[100] = 100
==============

#define TESTING 3
foo = 1
bar = 2
quux = TESTING
if quux: // this is a test.
    ding = quux
else
    foo = foo * /* inline */ 10

if foo:
    foo = bar
else:
    quux = 3

// single line
            // out in nowhere.

if quux: // tricky // thing.
    stop

/*

multi
line 
block
*/

if thing:
    foo = 1 /*
    tricky */bar = 2

def foo(bar,charlie):
    thing = 400

==============
if 1:
    a = 10
elif 0:
    if 2:
        a = 100
    else:
        a = 200
elif 0:
    stop
==============
if 0:
    stop
else if 1:
    if 2:
        a = 100
    else:
        a = 200
else if 0:
    stop
a = 500
==============
// broken case. without else, it doesn't know what label to jump to.
if 1 == 0:
    stop
elif 3 == 3:
    a = 10
    if 1 == 1:
        b = 11
    else:
        b = 12
elif 2 == 4:
    stop
==============
// working example with poc3-compat
if 1 == 1:
    contract.storage[255] = 255
    if 2 == 0:
        contract.storage[512] = 512
    else:
        contract.storage[256] = 256
elif 1 == 1:
    contract.storage[512] = 512
else
    contract.storage[512] = 512
contract.storage[257] = 257
==============
if 1 < 0:
    stop
elif 2 < 3:
    if 4 < 5:
        a = 7
    else:
        a = 8
else:
    a = 10
==============
if 1 < 0:
    stop
elif 2 > 3:
    a = 10
elif 5 > 4:
    a = 15
==============
if 1 < 0:
    contract.storage[255] = 255
elif 2 < 3:
    contract.storage[256] = 256
    if 1 > 0:
        contract.storage[512] = 512
    elif 2 < 3:
        contract.storage[513] = 513
elif 4 >= 5:
    contract.storage[257] = 257
contract.storage[258] = 258
==============
if 1 > 2:
    stop
if 2 > 1:
    contract.storage[100] = 255
=============
if tx.datan > 0:
    contract.storage[100] = 255
else:
    contract.storage[100] = 257
==============
if tx.datan > 0:
    contract.storage[100] = 255
if tx.datan < 1:
    contract.storage[100] = 257
==============
contract.storage[1000] = 15 / 3
contract.storage[1001] = 10 - 5
contract.storage[1002] = 10 + 5
contract.storage[1003] = 3 * 5
contract.storage[1004] = 10^2
if 10 > 11:
    contract.storage[100] = 100
if 11 < 10:
    contract.storage[100] = 100
if 10 == 11:
    contract.storage[100] = 100
    contract.storage[1000] = 15 / 3
